{"version":3,"sources":["Components/Champion.js","Brain/gettingData.js","Components/RandomChampion.js","Brain/excludeHandler.js","Brain/random.js","Brain/randomteam.js","Components/ChampionGen.js","App.js","reportWebVitals.js","index.js"],"names":["Champion","champions","setChampions","disabledChampions","setCheckedState","setDisabledChampions","checkedState","useEffect","axios","get","then","data","getChampions","handleOnChange","id","push","splice","indexOf","updatedCheckedState","map","item","index","className","src","url","onClick","type","checked","onChange","name","role","RandomChampion","availableChampions","random","setAvailableChampions","length","excludeHandler","setRandom","setRandom2","setRandom3","setRandom4","setRandom5","includes","updatedDisabled","currentValue","Random","stuff","forEach","console","log","stÃ¶ff","Math","floor","RandomTeam","random2","random3","random4","random5","randoms","anotherstuff","ChampionGen","useState","applyIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c463b196.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {getChampions} from '../Brain/gettingData'\r\n\r\nconst Champion = ({champions, setChampions, disabledChampions,setDisabledChampions,setCheckedState,checkedState}) =>{\r\n    useEffect (()=> {\r\n        getChampions(champions,setChampions);\r\n    }, []);\r\n    const handleOnChange = (id) => {\r\n        if (checkedState[id]){\r\n            disabledChampions.push(id);\r\n        }\r\n        else {\r\n            disabledChampions.splice(disabledChampions.indexOf(id),1);\r\n        }\r\n        const updatedCheckedState = checkedState.map ((item, index) => index == id ? !item : item);\r\n        setCheckedState(updatedCheckedState);\r\n    }\r\n    return (\r\n        <div className=\"grid\">{champions && (\r\n                champions.map(item =>(\r\n                    <div key={item.id} className={`championCard ${checkedState[item.id] ? '' : 'disabled'}`}>\r\n                        <img src={`${item.url}`} className=\"championImage click\" onClick={()=> handleOnChange(item.id)}/>\r\n                        <input type=\"checkbox\" checked={checkedState[item.id]} onChange={()=> handleOnChange(item.id)}/>\r\n                        <h2>{`${item.name}`}</h2>\r\n                        <h3>{`${item.role}`}</h3>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Champion;","\r\nimport axios from 'axios';\r\nimport {allMaps, mapStats, championStats} from './api'\r\n\r\nexport const getChampions = (champions,setChampions) => {\r\n    axios.get(\"https://random-paladins-api.herokuapp.com/api/champions\")\r\n        .then( data=> {\r\n          setChampions(data.data.champions);\r\n    })\r\n};\r\nexport const getMaps = (champions) => async () => {\r\n    const Maps = await axios.get(allMaps());\r\n    champions= Maps.data.results;\r\n};\r\nexport const getChampionStats = (champions) => async () => {\r\n    const ChampStats = await axios.get(mapStats());\r\n    champions= ChampStats.data.results;\r\n};\r\nexport const getMapStats = (champions) =>  async () =>{\r\n    const MapStats = await axios.get(championStats());\r\n    champions= MapStats.data.results;\r\n};","import React from 'react';\r\n\r\nconst RandomChampion = ({availableChampions,setAvailableChampions, random,champions}) =>{\r\n    return (\r\n         <div className={`championCard random ${random ===-1 || availableChampions.length===0? 'vanish' : ''}`}>\r\n                {random ===-1 || availableChampions.length===0 ? null : <img src={`${availableChampions[random].url}`} className=\"championImage\"/>}\r\n                {random ===-1 || availableChampions.length===0 ? null : <h2>{`${availableChampions[random].name}`}</h2>}\r\n                {random ===-1 || availableChampions.length===0 ? null : <h3>{`${availableChampions[random].role}`}</h3>}     \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomChampion;","const excludeHandler =(type, checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)=> {\r\n    switch (type) {\r\n      case \"ALL\":\r\n        if (checkedState.includes(true)){\r\n          const updatedCheckedState = checkedState.map (() => false);\r\n          const updatedDisabled = champions.map((currentValue)=> currentValue.id);\r\n          setCheckedState(updatedCheckedState);\r\n          setDisabledChampions(updatedDisabled);\r\n          setRandom(-1);\r\n          setRandom2(-1);\r\n          setRandom3(-1);\r\n          setRandom4(-1);\r\n          setRandom5(-1);\r\n        }\r\n        else {\r\n          const updatedCheckedState = checkedState.map (() => true);\r\n          const updatedDisabled = [];\r\n          setCheckedState(updatedCheckedState);\r\n          setDisabledChampions(updatedDisabled);\r\n        } \r\n        break;\r\n      case \"Front Line\":\r\n        {\r\n            const updatedCheckedState = champions.map ((currentValue,index) => currentValue.role===\"Front Line\" ? false : checkedState[index]);\r\n              for (let index = 0; index < champions.length; index++) {\r\n                if (champions[index].role===\"Front Line\" && !disabledChampions.includes(champions[index].id)) disabledChampions.push(champions[index].id);\r\n              }\r\n            setCheckedState(updatedCheckedState);\r\n          }\r\n        break;\r\n      case \"Damage\":\r\n        {\r\n          const updatedCheckedState = champions.map ((currentValue,index) => currentValue.role===\"Damage\" ? false : checkedState[index]);\r\n            for (let index = 0; index < champions.length; index++) {\r\n              if (champions[index].role===\"Damage\" && !disabledChampions.includes(champions[index].id)) disabledChampions.push(champions[index].id);\r\n            }\r\n          setCheckedState(updatedCheckedState);\r\n        }\r\n        break;\r\n      case \"Flank\":\r\n        {\r\n          const updatedCheckedState = champions.map ((currentValue,index) => currentValue.role===\"Flank\" ? false : checkedState[index]);\r\n            for (let index = 0; index < champions.length; index++) {\r\n              if (champions[index].role===\"Flank\" && !disabledChampions.includes(champions[index].id)) disabledChampions.push(champions[index].id);\r\n            }\r\n          setCheckedState(updatedCheckedState);\r\n        }\r\n        break;\r\n      case \"Support\":\r\n        {\r\n          const updatedCheckedState = champions.map ((currentValue,index) => currentValue.role===\"Support\" ? false : checkedState[index]);\r\n            for (let index = 0; index < champions.length; index++) {\r\n              if (champions[index].role===\"Support\" && !disabledChampions.includes(champions[index].id)) disabledChampions.push(champions[index].id);\r\n            }\r\n          setCheckedState(updatedCheckedState);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n}\r\n\r\nexport default excludeHandler;","const Random = (disabledChampions, setRandom, champions, availableChampions)=> {\r\n    const stuff = [];\r\n    if (disabledChampions.length>0){\r\n      if (disabledChampions.length===champions.length) {}\r\n      champions.forEach(function(currentValue,index){\r\n            if (disabledChampions.includes(currentValue.id))\r\n            {\r\n            }\r\n            else {\r\n            stuff.push(currentValue);\r\n            }\r\n        }\r\n    );}\r\n    else {\r\n      stuff.push(...champions);\r\n    }\r\n    console.log(availableChampions.length)\r\n      availableChampions.splice(0,availableChampions.length)\r\n      availableChampions.push(...stuff);\r\n      const stÃ¶ff = Math.floor(Math.random()*(availableChampions.length));\r\n      if (availableChampions) setRandom(stÃ¶ff);\r\n      return stÃ¶ff;\r\n}\r\n\r\nexport default Random;","const RandomTeam =(disabledChampions, setDisabledChampions, setRandom,setRandom2,setRandom3,setRandom4,setRandom5, champions, availableChampions,random, random2, random3, random4, random5)=>{\r\n    const stuff = [];\r\n    const randoms = [];\r\n    if(disabledChampions.length<champions.length){\r\n        console.log(disabledChampions.length)\r\n        console.log(champions.length)\r\n    if (disabledChampions.length>0){\r\n      \r\n      if (disabledChampions.length===champions.length) {}\r\n      champions.forEach(function(currentValue,index){\r\n            if (disabledChampions.includes(currentValue.id))\r\n            {\r\n            }\r\n            else {\r\n            stuff.push(currentValue);\r\n            }\r\n        }\r\n    );}\r\n    else {\r\n      stuff.push(...champions);\r\n    }\r\n    console.log(availableChampions.length)\r\n      availableChampions.splice(0,availableChampions.length)\r\n      availableChampions.push(...stuff);\r\n      if (availableChampions){\r\n          let anotherstuff=0;\r\n          randoms.push(Math.floor(Math.random()*(availableChampions.length)));\r\n          do {\r\n              anotherstuff = Math.floor(Math.random()*(availableChampions.length));\r\n          } while (randoms.includes(anotherstuff));\r\n          randoms.push(anotherstuff);\r\n          do {\r\n              anotherstuff = Math.floor(Math.random()*(availableChampions.length));\r\n          } while (randoms.includes(anotherstuff));\r\n          randoms.push(anotherstuff);\r\n          do {\r\n              anotherstuff = Math.floor(Math.random()*(availableChampions.length));\r\n          } while (randoms.includes(anotherstuff));\r\n          randoms.push(anotherstuff);\r\n          do {\r\n              anotherstuff = Math.floor(Math.random()*(availableChampions.length));\r\n          } while (randoms.includes(anotherstuff));\r\n          do {\r\n              anotherstuff = Math.floor(Math.random()*(availableChampions.length));\r\n          } while (randoms.includes(anotherstuff));\r\n          randoms.push(anotherstuff);\r\n          console.log(\"Randoms\");\r\n          console.log(randoms);\r\n          setRandom(randoms[0]);\r\n          setRandom2(randoms[1]);\r\n          setRandom3(randoms[2]);\r\n          setRandom4(randoms[3]);\r\n          setRandom5(randoms[4]);\r\n      }\r\n    /*const temp = [...disabledChampions];\r\n    const first = Random(temp, setRandom, champions, availableChampions).toString();\r\n    temp.push(first);\r\n    //console.log(first)\r\n    const second = Random(temp, setRandom2, champions, availableChampions).toString();\r\n    temp.push(second);\r\n    //console.log(second)\r\n    const third = Random(temp, setRandom3, champions, availableChampions).toString();\r\n    temp.push(third);\r\n    //console.log(third)\r\n    const fourth = Random(temp, setRandom4, champions, availableChampions).toString();\r\n    temp.push(fourth);\r\n    /*console.log(fourth)\r\n    console.log(temp)\r\n    console.log(disabledChampions)*/\r\n    //Random(temp, setRandom5, champions, availableChampions);\r\n    /*temp.splice(temp.indexOf(first),1);\r\n    temp.splice(temp.indexOf(second),1);\r\n    temp.splice(temp.indexOf(third),1);\r\n    temp.splice(temp.indexOf(fourth),1);*/\r\n    //console.log(temp);\r\n    }\r\n    else {\r\n\r\n    }\r\n}\r\nexport default RandomTeam;","import React, {useState,useEffect} from 'react';\r\nimport Champion from './Champion';\r\nimport RandomChampion from './RandomChampion';\r\nimport '../Styles/style.scss'\r\nimport excludeHandler from '../Brain/excludeHandler';\r\nimport Random from '../Brain/random';\r\nimport RandomTeam from '../Brain/randomteam';\r\n\r\nconst ChampionGen = () => {\r\n  const [champions,setChampions]= useState([]);\r\n  const [availableChampions,setAvailableChampions]= useState([]);\r\n  const [checkedState,setCheckedState]= useState([]);\r\n  const [random,setRandom]= useState(-1);\r\n  const [random2,setRandom2]= useState(-1);\r\n  const [random3,setRandom3]= useState(-1);\r\n  const [random4,setRandom4]= useState(-1);\r\n  const [random5,setRandom5]= useState(-1);\r\n  const [disabledChampions, setDisabledChampions] = useState([]);\r\n  useEffect(()=>{\r\n    for (let index = 0; index < 49; index++) {\r\n      checkedState.push(true);\r\n    }\r\n  },[]);\r\n  const DisableOther=()=>{\r\n    setRandom2(-1);\r\n    setRandom3(-1);\r\n    setRandom4(-1);\r\n    setRandom5(-1);\r\n  }\r\n  return (\r\n    <div className=\"championGenerator\">\r\n      <div className=\"flex\">\r\n        <button className=\"\" onClick={()=>{Random(disabledChampions, setRandom, champions, availableChampions); DisableOther()}}>Random Champion</button>\r\n        <button className=\"\" onClick={()=>RandomTeam(disabledChampions,setDisabledChampions, setRandom,setRandom2,setRandom3,setRandom4,setRandom5, champions, availableChampions,random, random2, random3, random4, random5)}>Random Team</button>\r\n        <button className=\"\" onClick={()=>excludeHandler(\"ALL\", checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)}>ALL</button>\r\n        <button className=\"frontline\" onClick={()=>excludeHandler(\"Front Line\", checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)}>Disable Front Line</button>\r\n        <button className=\"damage\" onClick={()=>excludeHandler(\"Damage\", checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)}>Disable Damage</button>\r\n        <button className=\"flank\" onClick={()=>excludeHandler(\"Flank\", checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)}>Disable Flank</button>\r\n        <button className=\"support\" onClick={()=>excludeHandler(\"Support\", checkedState, setCheckedState, setDisabledChampions, disabledChampions,champions,setRandom,setRandom2,setRandom3,setRandom4,setRandom5)}>Disable Support</button>\r\n      </div>\r\n      <div className=\"grid\">\r\n        <RandomChampion random={random} availableChampions={availableChampions} setAvailableChampions={setAvailableChampions} champions={champions}/>\r\n        <RandomChampion random={random2} availableChampions={availableChampions} setAvailableChampions={setAvailableChampions} champions={champions}/>\r\n        <RandomChampion random={random3} availableChampions={availableChampions} setAvailableChampions={setAvailableChampions} champions={champions}/>\r\n        <RandomChampion random={random4} availableChampions={availableChampions} setAvailableChampions={setAvailableChampions} champions={champions}/>\r\n        <RandomChampion random={random5} availableChampions={availableChampions} setAvailableChampions={setAvailableChampions} champions={champions}/>\r\n      </div>\r\n      <Champion applyIcon={false} champions={champions} setChampions={setChampions} disabledChampions={disabledChampions} setDisabledChampions={setDisabledChampions} checkedState={checkedState} setCheckedState={setCheckedState}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChampionGen;\r\n","import React from 'react';\nimport './Styles/style.scss'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      valami\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ChampionGen from './Components/ChampionGen';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './Styles/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChampionGen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}